<%- include('partials/header'); -%>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Sign Up</title>
  </head>
  <body>
    <div class="content">
      <div class="Cont-Block dev">
        <div class="Head dev">
          <img class="dev" src="assets/003736e340f58f47e44ba4a55b02eb90.png" />
          <h1 class="title dev">DEVELOPERS</h1>
        </div>
        <p class="desc dev">
          Bring together your projects, Explore others’, Practice & Compete,
          Learn & Fill in the gaps and build a &emsp;&emsp; portfolio that
          rocks.
        </p>
        <button class="signUP dev" id="sign-up-dev">
          Sign up as a Developer
        </button>
      </div>
      <div class="Cont-Block cli">
        <div class="Head cli">
          <svg
            class="cli"
            width="100"
            height="100"
            viewBox="0 0 100 100"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <rect width="100" height="100" fill="url(#paint0_linear)" />
            <path
              d="M50 17L57 14L59 23.5L50 27.5L55 32L61 75L49.5 87L39 75L45 32L50 27.5L41 23.5C41 23.5 43 16.1479 43 14L50 17Z"
              fill="#020F22"
            />
            <defs>
              <linearGradient
                id="paint0_linear"
                x1="0"
                y1="100"
                x2="100"
                y2="0"
                gradientUnits="userSpaceOnUse"
              >
                <stop stop-color="#CBFF0B" />
                <stop offset="1" stop-color="#02F38D" />
              </linearGradient>
            </defs>
          </svg>
          <h1 class="title cli">CLIENTS</h1>
        </div>
        <p class="desc cli">
          BRYTE has many experienced developers in the industry. Look for and
          hire the best for your business, or organize competitions the way it
          fits the requirements
        </p>
        <button class="signUP cli" id="sign-up-client">
          Sign up as a Client
        </button>
      </div>
      <div class="UnderLineTitle TitleAbove">Account Info</div>
      <svg
        class="UnderLineTitle"
        width="646"
        height="17"
        viewBox="0 0 646 17"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <circle cx="6.5" cy="6.5" r="6.5" fill="#4B90F7" />
        <circle cx="23.5" cy="6.5" r="5.5" stroke="#4B90F7" stroke-width="2" />
        <g filter="url(#filter0_d)">
          <line
            x1="36"
            y1="7.5"
            x2="641"
            y2="7.49995"
            stroke="url(#paint3_linear)"
          />
        </g>
        <defs>
          <filter
            id="filter0_d"
            x="31"
            y="5.99995"
            width="615"
            height="11.0001"
            filterUnits="userSpaceOnUse"
            color-interpolation-filters="sRGB"
          >
            <feFlood flood-opacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            />
            <feOffset dy="4" />
            <feGaussianBlur stdDeviation="2.5" />
            <feColorMatrix
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.15 0"
            />
            <feBlend
              mode="normal"
              in2="BackgroundImageFix"
              result="effect1_dropShadow"
            />
            <feBlend
              mode="normal"
              in="SourceGraphic"
              in2="effect1_dropShadow"
              result="shape"
            />
          </filter>
          <linearGradient
            id="paint3_linear"
            x1="36"
            y1="8.99266"
            x2="641"
            y2="8.99266"
            gradientUnits="userSpaceOnUse"
          >
            <stop stop-color="#4B90F7" />
            <stop offset="1" stop-color="#4B90F7" stop-opacity="0" />
          </linearGradient>
        </defs>
      </svg>
      <form class="signUP-form dev" id="form1">
        <div class="signUP-form-Cont-1">
          <div class="Name-Cont">
            <div class="Input-Cont">
              <div class="Label-text">First Name</div>
              <div class="Input-Stylizer">
                <input type="text" class="Input-text"  name="Fname"/>
                <div class="error-msg" id="Fname-error"></div>
              </div>
            </div>
            <div class="Input-Cont">
              <div class="Label-text">Last Name</div>
              <div class="Input-Stylizer">
                <input type="text" class="Input-text"  name="Lname" />
                <div class="error-msg" id="Lname-error"></div>
              </div>
            </div>
          </div>
          <div class="Input-Cont">
            <div class="Label-text">Username</div>
            <div class="Input-Stylizer">
              <input type="text" class="Input-text"  name="UserName" />
              <div id="username_error" class="error-msg"></div>
            </div>
          </div>
          <div class="Input-Cont">
            <div class="Label-text">Email</div>
            <div class="Input-Stylizer">
              <input type="email" class="Input-text"  name="Email" />
              <div class="error-msg" id="email_error"></div>
            </div>
          </div>
          <div class="Name-Cont">
            <div class="Input-Cont">
              <div class="Label-text">Password</div>
              <div class="Input-Stylizer">
                <input type="password" class="Input-text" name="Password" />
                <div class="error-msg" id="password_error"></div>
              </div>
            </div>
            <div class="Input-Cont">
              <div class="Label-text">Confirm Password</div>
              <div class="Input-Stylizer">
                <input type="password" class="Input-text" name="ConfirmPassword" />
                <div class="error-msg" id="password_confirm_error"></div>
              </div>
            </div>
          </div>
          <div class="signUP dev" id="Continue-dev">Continue</div>
        </div>
        <div class="signUP-form-Cont-2">
          <div class="Name-cont">
          <div class="Input-Cont">
            <div class="Label-text">Job Title</div>
            <div class="Input-Stylizer">
              <input type="text" class="Input-text"  name="JobTitle"/>
              <div class="error-msg" id="job_title_error"></div>
            </div>
          </div>
          <div class="Input-Cont">
            <div class="Label-text">Phone Number</div>
            <div class="Input-Stylizer">
              <input type="tel" class="Input-text"  name="PhoneNumber" />
              <div class="error-msg" id="phone_number_error"></div>
            </div>
          </div>
        </div>
        <div class="Name-cont">
          <div class="Input-Cont">
            <div class="Label-text">Profile Picture Link</div>
            <div class="Input-Stylizer">
              <input type="text" class="Input-text"  name="ProfilePicture"/>
              <div class="error-msg" id="profile_picture_error"></div>
            </div>
          </div>
          <div class="Input-Cont">
            <div class="Label-text">Cover Link</div>
            <div class="Input-Stylizer">
              <input type="text" class="Input-text"  name="Cover" />
              <div class="error-msg" id="cover_error"></div>
            </div>
          </div>
        </div>
          <div class="Input-Cont">
            <div class="Label-text">Birth Date</div>
            <div class="Input-Stylizer">
              <input type="date" class="Input-text"  name="BirthDate" />
              <div class="error-msg" id="birth_date_error"></div>
            </div>
          </div>
          <div class="Input-Cont">
            <div class="Label-text">Area of Residence</div>
            <div class="Input-Stylizer">
              <input type="text" class="Input-text"  name="Address" />
              <div class="error-msg" id="area_error"></div>
            </div>
          </div>
          <button
            type="submit"
            form="form1"
            value="Submit"
            class="signUP dev"
            id="Complete-dev"
          >
            Complete Sign up
          </button>
        </div>
      </form>

      <div class="sep">
        <svg
          width="157"
          height="464"
          viewBox="0 0 157 464"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <line
            id="sep1"
            x1="156.015"
            y1="0.791237"
            x2="67.5089"
            y2="302.91"
            stroke="url(#paint2_linear)"
            stroke-width="2"
          />
          <line
            id="sep2"
            x1="0.985319"
            y1="463.209"
            x2="87.2156"
            y2="169.016"
            stroke="url(#paint1_linear)"
            stroke-width="2"
          />
          <defs>
            <linearGradient
              id="paint2_linear"
              x1="66.5492"
              y1="302.629"
              x2="155.055"
              y2="0.510101"
              gradientUnits="userSpaceOnUse"
            >
              <stop stop-color="#D1D1D1" />
              <stop offset="1" stop-color="#D1D1D1" stop-opacity="0" />
            </linearGradient>
            <linearGradient
              id="paint1_linear"
              x1="88.1752"
              y1="169.297"
              x2="1.94495"
              y2="463.49"
              gradientUnits="userSpaceOnUse"
            >
              <stop stop-color="#D1D1D1" />
              <stop offset="1" stop-color="#D1D1D1" stop-opacity="0" />
            </linearGradient>
          </defs>
        </svg>
      </div>
    </div>
    <footer>BRYTE© - 2021 Copyrights Reserved</footer>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.5.1/gsap.min.js"></script>
    <script>
      
      const abbas = async(e)=>{
        e.preventDefault();
        //get the values
        const Fname = form1.Fname.value;
        const Lname = form1.Lname.value;
        const UserName = form1.UserName.value;
        const Email = form1.Email.value;
        const Password = form1.Password.value;
        const ConfirmPassword = form1.ConfirmPassword.value;

        const JobTitle = form1.JobTitle.value;
        const PhoneNumber = form1.PhoneNumber.value;
        const BirthDate = form1.BirthDate.value;
        const ProfilePicture = form1.ProfilePicture.value;
        const Cover = form1.Cover.value;
        const Address = form1.Address.value;

        const job_title_error = document.querySelector('#job_title_error');
        const phone_number_error = document.querySelector('#phone_number_error');
        const profile_picture_error = document.querySelector('#profile_picture_error');
        const cover_error = document.querySelector('#cover_error');
        const birth_date_error = document.querySelector('#birth_date_error');
        const area_error = document.querySelector('#area_error');

        if (!JobTitle)
          job_title_error.textContent = "This filed is required";

        else if (!PhoneNumber)
          phone_number_error.textContent = "This filed is required";
        
        else if (!BirthDate)
          birth_date_error.textContent = "This filed is required";
        
        else if (!ProfilePicture)
        profile_picture_error.textContent = "This filed is required";
        
        else if (!Cover)
        cover_error.textContent = "This filed is required";
        

        else if(!Address)
          area_error.textContent = "This filed is required";

        else{
  
          try {
            let res = await fetch('/signup',{
            method: 'POST',
            body: JSON.stringify({Fname,Lname,UserName,Email,Password,ConfirmPassword,JobTitle,PhoneNumber,BirthDate,Address}),
            headers: {'Content-Type': 'application/json'}
          }).then(res => res.json());
          
          console.log(res)
          if(res.user) {
            location.assign('/');
          }  
            
          } 
          catch (error) {
            console.log(err);
          }
        } 
          
      };

      document.querySelector("#sign-up-dev").addEventListener("click", ()=> {
        gsap.to("#sep1", { duration: 0.7, x: 55, y: -200, opacity: 0 });
        gsap.to("#sep2", { duration: 0.7, x: -55, y: 200, opacity: 0 });
        gsap.to(".Cont-Block.cli", { duration: 0.7, x: 500, opacity: 0 });
        gsap.to(`#${event.target.id}`, { duration: 0.1, y: 20, opacity: 0 });
        gsap.to(".Cont-Block.dev", { delay: 0.5, duration: 1, x: 840, y: 40 });
        gsap.to(".signUP-form-Cont-1", { delay: 1, duration: 0.4, y: -80});
        gsap.to(".signUP-form-Cont-1 .Input-Cont, #Continue-dev", { delay: 1, duration: 0.4, y:-80, opacity: 1, stagger: 0.1});
        gsap.to(".UnderLineTitle", { delay: 1, duration: 0.3, x:80, opacity: 1});
        document.querySelector(".signUP-form-Cont-1").style.pointerEvents = 'all';
      });
      document.querySelector("#Continue-dev").addEventListener("click", async()=> {

        //Error messages
        const Fname_error = document.querySelector('#Fname-error');
        const Lname_error = document.querySelector('#Lname-error'); 
        const username_error = document.querySelector('#username_error');
        const email_error = document.querySelector('#email_error');
        const password_error = document.querySelector('#password_error');
        const password_confirm_error = document.querySelector('#password_confirm_error');

        Fname_error.textContent = "";
        Lname_error.textContent = "";
        username_error.textContent = "";
        email_error.textContent = "";
        password_error.textContent= "";
        password_confirm_error.textContent = "";

        const Fname = form1.Fname.value;
        const Lname = form1.Lname.value;
        const UserName = form1.UserName.value;
        const Email = form1.Email.value;
        const Password = form1.Password.value;
        const ConfirmPassword = form1.ConfirmPassword.value;

        if (!Fname)
          Fname_error.textContent = "This filed is required";

        else if(!Lname)
          Lname_error.textContent = "This filed is required";

        else if(!UserName)
          username_error.textContent = "This filed is required";

        else if(!Email)
          email_error.textContent = "This filed is required";

        else if(!Password)
          password_error.textContent = "This filed is required";

        else if(!ConfirmPassword)
          password_confirm_error.textContent = "This filed is required";
        else if (Password != ConfirmPassword)
          password_error.textContent = "Password and Confirm Password Must Have Same Value";
        else
        {
          let res = await fetch('/check_new_user_name',{
              method: 'POST',
              body: JSON.stringify({UserName}),
              headers: {'Content-Type': 'application/json'}
            }).then(res => res.json());
            
          if (res.found == true)
          {
            username_error.textContent = "This Username is already used";
          }

          else
          {
            let res2 = await fetch('/check_new_email',{
              method: 'POST',
              body: JSON.stringify({Email}),
              headers: {'Content-Type': 'application/json'}
            }).then(res2 => res2.json());

            if (res2.found == true)
            {
              email_error.textContent = "This Email is already used";
            }

            else
            {
              gsap.to(".signUP-form-Cont-1", { delay: 0, duration: 0.4, y: 80});
              gsap.to(".signUP-form-Cont-1 .Input-Cont, #Continue-dev", { delay: 0, duration: 0.4, y:80, opacity: 0});
              document.querySelector(".signUP-form-Cont-1").style.pointerEvents = 'none';
              gsap.to(".signUP-form-Cont-2", { delay: 0.5, duration: 0.4, y: -80});
              gsap.to(".signUP-form-Cont-2 .Input-Cont, #Complete-dev", { delay: 0.4, duration: 0.4, y:-80, opacity: 1, stagger: 0.1});
              document.querySelector(".signUP-form-Cont-2").style.pointerEvents = 'all';
              gsap.to("circle", { duration: 0.5, fill: '#4B90F7'});
              document.querySelector(".TitleAbove").innerHTML = "Personal Info";
            } 
          } 
        }
      });

      const form = document.querySelector('#form1');
      form.addEventListener('submit', abbas);


      document.querySelector("#sign-up-client").addEventListener("click", ()=> {
        document.querySelector(".Name-cont").outerHTML = ` <div class="Input-Cont">
              <div class="Label-text">Company Name</div>
              <div class="Input-Stylizer">
                <input type="text" class="Input-text" name="ClientName"/>
                <div class="error-msg" id="Name-error"></div>
              </div>`;
        document.querySelector("#Continue-dev").id = "Continue-cli";

        document.querySelector("#Continue-cli").addEventListener("click", async()=> {

        const name_error = document.querySelector('#Name-error');
        const username_error = document.querySelector('#username_error');
        const email_error = document.querySelector('#email_error');
        const password_error = document.querySelector('#password_error');
        const password_confirm_error = document.querySelector('#password_confirm_error');

        name_error.textContent = "";
        username_error.textContent = "";
        email_error.textContent = "";
        password_error.textContent= "";
        password_confirm_error.textContent = "";

        const Name = form1.ClientName.value;
        const UserName = form1.ClientUserName.value;
        const Email = form1.ClientEmail.value;
        const Password = form1.ClientPassword.value;
        const ConfirmPassword = form1.ClientConfirmPassword.value;

        if (!Name)
          name_error.textContent = "This filed is required";
        else if(!UserName)
          username_error.textContent = "This filed is required";

        else if(!Email)
          email_error.textContent = "This filed is required";

        else if(!Password)
          password_error.textContent = "This filed is required";

        else if(!ConfirmPassword)
          password_confirm_error.textContent = "This filed is required";
        else if (Password != ConfirmPassword)
          password_error.textContent = "Password and Confirm Password Must Have Same Value";
        else
        {
          let res = await fetch('/check_new_user_name',{
              method: 'POST',
              body: JSON.stringify({UserName}),
              headers: {'Content-Type': 'application/json'}
            }).then(res => res.json());
            
          if (res.found == true)
          {
            username_error.textContent = "This Username is already used";
          }

          else
          {
            let res2 = await fetch('/check_new_email',{
              method: 'POST',
              body: JSON.stringify({Email}),
              headers: {'Content-Type': 'application/json'}
            }).then(res2 => res2.json());


            if (res2.found == true)
            {
              email_error.textContent = "This Email is already used";
            }

            else
            {
              gsap.to(".signUP-form-Cont-1", { delay: 0, duration: 0.4, y: 80});
              gsap.to(".signUP-form-Cont-1 .Input-Cont, #Continue-cli", { delay: 0, duration: 0.4, y:80, opacity: 0});
              document.querySelector(".signUP-form-Cont-1").style.pointerEvents = 'none';
              gsap.to(".signUP-form-Cont-2", { delay: 0.5, duration: 0.4, y: -80});
              gsap.to(".signUP-form-Cont-2 .Input-Cont, #Complete-cli", { delay: 0.4, duration: 0.4, y:-80, opacity: 1, stagger: 0.1});
              document.querySelector(".signUP-form-Cont-2").style.pointerEvents = 'all';
              gsap.to("circle", { duration: 0.5, fill: '#4B90F7'});
              document.querySelector(".TitleAbove").innerHTML = "Personal Info";
            } 
          } 
        }

      });

        document.querySelector('#form1').removeEventListener("submit", abbas);
        document.querySelector('input[name="UserName"]').name = "ClientUserName"; 
        document.querySelector('input[name="Email"]').name = "ClientEmail"; 
        document.querySelector('input[name="Password"]').name = "ClientPassword"; 
        document.querySelector('input[name="ConfirmPassword"]').name = "ClientConfirmPassword"; 
                
        document.querySelector(".signUP-form-Cont-2").innerHTML = `
          <div class="Input-Cont">
            <div class="Label-text">Profile Picture Link</div>
            <div class="Input-Stylizer">
              <input type="text" class="Input-text"  name="ClientProfilePicture"/>
              <div class="error-msg" id="profile_picture_error"></div>
              </div>
          </div>
          <div class="Input-Cont">
            <div class="Label-text">Cover Link</div>
            <div class="Input-Stylizer">
              <input type="text" class="Input-text"  name="ClientCover" />
              <div class="error-msg" id="cover_error"></div>
            </div>
          </div>
          <div class="Input-Cont">
            <div class="Label-text">Founded Date</div>
            <div class="Input-Stylizer">
              <input type="date" class="Input-text"  name="ClientBirthDate" />
              <div class="error-msg" id="birth_date_error"></div>
            </div>
          </div>
          <button
            type="submit"
            form="form1"
            value="Submit"
            class="signUP dev"
            id="Complete-cli"
          >
            Complete Sign up
          </button>
        `;


        
        document.querySelector("*").classList.add('greenify');
        document.querySelector(".Head.cli").classList.add('dont-greenify');
        gsap.to("#sep1", { duration: 0.7, x: 55, y: -200, opacity: 0 });
        gsap.to("#sep2", { duration: 0.7, x: -55, y: 200, opacity: 0 });
        gsap.to(".Cont-Block.dev", { duration: 0.7, x: -500, opacity: 0 });
        gsap.to(`#${event.target.id}`, { duration: 0.1, y: 20, opacity: 0 });
        gsap.to(".signUP-form-Cont-1", { delay: 1, duration: 0.4, y: -80});
        gsap.to(".signUP-form-Cont-1 .Input-Cont, #Continue-cli", { delay: 1, duration: 0.4, y:-80, opacity: 1, stagger: 0.1});
        gsap.to(".UnderLineTitle", { delay: 1, duration: 0.3, x:80, opacity: 1});
        document.querySelector(".signUP-form-Cont-1").style.pointerEvents = 'all'; 

        document.querySelector("#Complete-cli").addEventListener("click", async(e)=>{
          e.preventDefault();

          const name = form1.ClientName.value;
          const userName = form1.ClientUserName.value;
          const email = form1.ClientEmail.value;
          const password = form1.ClientPassword.value;
          const confirmPassword = form1.ClientConfirmPassword.value;
          const profilePicture = form1.ClientProfilePicture.value;
          const coverPicture = form1.ClientCover.value;
          const foundedDate = form1.ClientBirthDate.value;

          const profile_picture_error = document.querySelector("#profile_picture_error");
          const cover_error = document.querySelector("#cover_error");
          const birth_date_error = document.querySelector("#birth_date_error");

          console.log(profilePicture);
          if (!profilePicture)
            profile_picture_error.textContent = "This field is required";
          else if (!coverPicture)
            cover_error.textContent = "This field is required";
          else if (!foundedDate)
            birth_date_error.textContent = "This field is required";

          else {

            let res = await fetch('/client-signup',{
              method: 'POST',
              body: JSON.stringify({name, userName, email, profilePicture, 
                                    phone : "01000", password, foundedDate, location : "test"}),
              headers: {'Content-Type': 'application/json'}
            }).then(res => res.json());
            console.log(res);
          }

        })
      });
      
      </script>
  </body>
